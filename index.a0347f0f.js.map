{"mappings":"A,I,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,M,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,GCAO,IAAM,EAAM,CACjB,MAAO,SAAS,gBAAgB,CAAC,SACjC,cAAe,SAAS,aAAa,CAAC,oBACtC,eAAgB,SAAS,aAAa,CAAC,kBACvC,UAAW,SAAS,aAAa,CAAC,iBAClC,SAAU,SAAS,aAAa,CAAC,gBACjC,QAAS,SAAS,aAAa,CAAC,gBAChC,WAAY,SAAS,aAAa,CAAC,UACnC,kBAAmB,SAAS,aAAa,CAAC,kBAC1C,YAAa,SAAS,eAAe,CACrC,QAAS,SAAS,aAAa,CAAC,cAChC,SAAU,SAAS,aAAa,CAAC,cACnC,C,G,I,E,E,S,E,C,EI+JA,EAzKA,MACE,YACE,EAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACD,CACA,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,SAAS,CAAC,GACnC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,GAC5B,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,MAChB,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAClC,CAEA,WAAY,CACV,OAAO,IAAI,CAAC,MAAM,AACpB,CAEA,OAAQ,CACN,IAAI,CAAC,MAAM,CAAG,UACd,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC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","sources":["<anon>","src/scripts/ui/dom.js","src/scripts/main.js","src/scripts/ui/events.js","src/scripts/core/gameManager.js","src/modules/Game.class.js","src/scripts/ui/render.js","src/scripts/ui/controls.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7b01\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7b01\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bOOQy\", function(module, exports) {\n\n$parcel$export(module.exports, \"DOM\", function () { return $89abce507c708760$export$cb0933279c36a66b; });\nconst $89abce507c708760$export$cb0933279c36a66b = {\n    cells: document.querySelectorAll(\".tile\"),\n    newGameButton: document.querySelector(\".button--restart\"),\n    tryAgainButton: document.querySelector(\".popup__button\"),\n    scoreSpan: document.querySelector(\".stats__score\"),\n    bestSpan: document.querySelector(\".stats__best\"),\n    message: document.querySelector(\".popup__text\"),\n    messageBox: document.querySelector(\".popup\"),\n    themeToggleButton: document.querySelector(\".button--theme\"),\n    htmlElement: document.documentElement,\n    iconSun: document.querySelector(\".icon--sun\"),\n    iconMoon: document.querySelector(\".icon--moon\")\n};\n\n});\n\n\nvar $bOOQy = parcelRequire(\"bOOQy\");\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.initialState = this.copyBoard(initialState);\n        this.board = this.copyBoard(initialState);\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.copyBoard(this.board);\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = \"playing\";\n        this.board = this.copyBoard(this.initialState);\n        this.score = 0;\n        this.addRandomTile();\n        this.addRandomTile();\n    }\n    restart() {\n        this.status = \"idle\";\n        this.board = this.copyBoard(this.initialState);\n        this.score = 0;\n    }\n    moveLeft() {\n        this.performMove((board)=>this.merge(board));\n    }\n    moveRight() {\n        this.performMove((board)=>this.reverse(this.merge(this.reverse(board))));\n    }\n    moveUp() {\n        this.performMove((board)=>{\n            const transposed = this.transpose(board);\n            const merged = this.merge(transposed);\n            return this.transpose(merged);\n        });\n    }\n    moveDown() {\n        this.performMove((board)=>{\n            const transposed = this.transpose(board);\n            const reversed = this.reverse(transposed);\n            const merged = this.merge(reversed);\n            const restored = this.reverse(merged);\n            return this.transpose(restored);\n        });\n    }\n    performMove(moveFn) {\n        if (this.status !== \"playing\") return;\n        const prevBoard = this.copyBoard(this.board);\n        this.board = moveFn(this.board);\n        if (!this.areBoardsEqual(this.board, prevBoard)) this.addRandomTile();\n        if (this.has2048()) this.status = \"win\";\n        else if (this.isGameOver()) this.status = \"lose\";\n    }\n    areBoardsEqual(b1, b2) {\n        return b1.every((row, r)=>row.every((val, c)=>val === b2[r][c]));\n    }\n    merge(board) {\n        return board.map((row)=>{\n            const filtered = row.filter((n)=>n !== 0);\n            for(let i = 0; i < filtered.length - 1; i++)if (filtered[i] === filtered[i + 1]) {\n                filtered[i] *= 2;\n                this.score += filtered[i];\n                filtered.splice(i + 1, 1);\n            }\n            while(filtered.length < 4)filtered.push(0);\n            return filtered;\n        });\n    }\n    transpose(board) {\n        return board[0].map((_, col)=>board.map((row)=>row[col]));\n    }\n    reverse(board) {\n        return board.map((row)=>[\n                ...row\n            ].reverse());\n    }\n    copyBoard(board) {\n        return board.map((row)=>[\n                ...row\n            ]);\n    }\n    addRandomTile() {\n        const empty = [];\n        for(let r = 0; r < 4; r++){\n            for(let c = 0; c < 4; c++)if (this.board[r][c] === 0) empty.push({\n                r: r,\n                c: c\n            });\n        }\n        if (empty.length > 0) {\n            const { r: r, c: c } = empty[Math.floor(Math.random() * empty.length)];\n            this.board[r][c] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    has2048() {\n        return this.board.flat().includes(2048);\n    }\n    isGameOver() {\n        if (this.board.flat().includes(0)) return false;\n        for(let r = 0; r < 4; r++)for(let c = 0; c < 4; c++){\n            const curr = this.board[r][c];\n            if (r < 3 && curr === this.board[r + 1][c] || c < 3 && curr === this.board[r][c + 1]) return false;\n        }\n        return true;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\nvar $bOOQy = parcelRequire(\"bOOQy\");\nlet $aec2a4f3d3b1962e$var$lastBoard = [];\nfunction $aec2a4f3d3b1962e$export$ed9055c26739410b(game) {\n    const board = game.getState();\n    const flatBoard = board.flat();\n    const flatLast = $aec2a4f3d3b1962e$var$lastBoard.flat();\n    (0, $bOOQy.DOM).cells.forEach((cell, index)=>{\n        const val = flatBoard[index];\n        const prev = flatLast[index];\n        cell.className = \"field-cell\";\n        if (val) {\n            const digits = String(val).length;\n            cell.style.setProperty(\"--digits\", digits);\n            cell.textContent = val;\n            cell.classList.add(`field-cell--${val}`);\n            if (prev === 0 && val !== 0) cell.classList.add(\"field-cell--new\");\n            else if (prev && val > prev) cell.classList.add(\"field-cell--merged\");\n        } else {\n            cell.textContent = \"\";\n            cell.style.setProperty(\"--digits\", 1);\n        }\n    });\n    $aec2a4f3d3b1962e$var$lastBoard = board.map((row)=>[\n            ...row\n        ]);\n    (0, $bOOQy.DOM).scoreSpan.textContent = game.getScore();\n    $aec2a4f3d3b1962e$export$a0659029c09c6c24(game.getScore());\n    $aec2a4f3d3b1962e$export$7720291ca6f99335(game);\n}\nfunction $aec2a4f3d3b1962e$export$7720291ca6f99335(game) {\n    const gameStatus = game.getStatus();\n    if (gameStatus === \"win\") $aec2a4f3d3b1962e$export$787f5d117f138d13(\"\\uD83C\\uDF89 Winner! Congrats!\");\n    else if (gameStatus === \"lose\") $aec2a4f3d3b1962e$export$787f5d117f138d13(\"You lose! Restart the game?\");\n    else $aec2a4f3d3b1962e$export$4521d214801a3d3b();\n}\nfunction $aec2a4f3d3b1962e$export$787f5d117f138d13(text) {\n    (0, $bOOQy.DOM).message.textContent = text;\n    (0, $bOOQy.DOM).messageBox.classList.remove(\"hidden\");\n}\nfunction $aec2a4f3d3b1962e$export$4521d214801a3d3b() {\n    (0, $bOOQy.DOM).messageBox.classList.add(\"hidden\");\n}\nfunction $aec2a4f3d3b1962e$export$a0659029c09c6c24(score = 0) {\n    const bestScore = Number(localStorage.getItem(\"best-score\")) || 0;\n    if (score > bestScore) {\n        localStorage.setItem(\"best-score\", score);\n        (0, $bOOQy.DOM).bestSpan.textContent = score;\n    } else (0, $bOOQy.DOM).bestSpan.textContent = bestScore;\n}\n\n\nconst $feaffa6e705a09ab$export$119d2a93e2780362 = new (0, (/*@__PURE__*/$parcel$interopDefault($a5fd07fa01589658$exports)))();\nfunction $feaffa6e705a09ab$export$5f9f2982725d71d5() {\n    $feaffa6e705a09ab$export$119d2a93e2780362.start();\n    (0, $aec2a4f3d3b1962e$export$ed9055c26739410b)($feaffa6e705a09ab$export$119d2a93e2780362);\n}\nfunction $feaffa6e705a09ab$export$13063a66817085c1() {\n    $feaffa6e705a09ab$export$119d2a93e2780362.restart();\n    $feaffa6e705a09ab$export$119d2a93e2780362.start();\n    (0, $aec2a4f3d3b1962e$export$4521d214801a3d3b)();\n    (0, $aec2a4f3d3b1962e$export$ed9055c26739410b)($feaffa6e705a09ab$export$119d2a93e2780362);\n}\n\n\n\n\nfunction $1dc5e44c5ffa5779$export$b70eff784f2f99b(e) {\n    const actions = {\n        ArrowLeft: \"moveLeft\",\n        a: \"moveLeft\",\n        ArrowRight: \"moveRight\",\n        d: \"moveRight\",\n        ArrowUp: \"moveUp\",\n        w: \"moveUp\",\n        ArrowDown: \"moveDown\",\n        s: \"moveDown\",\n        n: \"restart\",\n        r: \"restart\"\n    };\n    const action = actions[e.key];\n    if (!action) return;\n    if (action === \"restart\") {\n        (0, $feaffa6e705a09ab$export$13063a66817085c1)();\n        return;\n    }\n    if ((0, $feaffa6e705a09ab$export$119d2a93e2780362).getStatus() !== \"playing\") return;\n    (0, $feaffa6e705a09ab$export$119d2a93e2780362)[action]();\n    (0, $aec2a4f3d3b1962e$export$ed9055c26739410b)((0, $feaffa6e705a09ab$export$119d2a93e2780362));\n}\nlet $1dc5e44c5ffa5779$var$touchStartX = 0;\nlet $1dc5e44c5ffa5779$var$touchStartY = 0;\nconst $1dc5e44c5ffa5779$var$SWIPE_THRESHOLD = 30;\nfunction $1dc5e44c5ffa5779$export$f11d8654acca7032(e) {\n    const touch = e.touches[0];\n    $1dc5e44c5ffa5779$var$touchStartX = touch.clientX;\n    $1dc5e44c5ffa5779$var$touchStartY = touch.clientY;\n}\nfunction $1dc5e44c5ffa5779$export$fb9a88086a633776(e) {\n    const touch = e.changedTouches[0];\n    const deltaX = touch.clientX - $1dc5e44c5ffa5779$var$touchStartX;\n    const deltaY = touch.clientY - $1dc5e44c5ffa5779$var$touchStartY;\n    const absX = Math.abs(deltaX);\n    const absY = Math.abs(deltaY);\n    if (Math.max(absX, absY) < $1dc5e44c5ffa5779$var$SWIPE_THRESHOLD || (0, $feaffa6e705a09ab$export$119d2a93e2780362).getStatus() !== \"playing\") return;\n    if (absX > absY) {\n        if (deltaX > 0) (0, $feaffa6e705a09ab$export$119d2a93e2780362).moveRight();\n        else (0, $feaffa6e705a09ab$export$119d2a93e2780362).moveLeft();\n    } else if (deltaY > 0) (0, $feaffa6e705a09ab$export$119d2a93e2780362).moveDown();\n    else (0, $feaffa6e705a09ab$export$119d2a93e2780362).moveUp();\n    (0, $aec2a4f3d3b1962e$export$ed9055c26739410b)((0, $feaffa6e705a09ab$export$119d2a93e2780362));\n}\n\n\nfunction $b9d74c03522a0ece$export$c7fc3d77edeab91a() {\n    (0, $bOOQy.DOM).newGameButton.addEventListener(\"click\", (0, $feaffa6e705a09ab$export$13063a66817085c1));\n    (0, $bOOQy.DOM).tryAgainButton.addEventListener(\"click\", (0, $feaffa6e705a09ab$export$13063a66817085c1));\n    window.addEventListener(\"keydown\", (0, $1dc5e44c5ffa5779$export$b70eff784f2f99b));\n    window.addEventListener(\"touchstart\", (0, $1dc5e44c5ffa5779$export$f11d8654acca7032), {\n        passive: true\n    });\n    window.addEventListener(\"touchend\", (0, $1dc5e44c5ffa5779$export$fb9a88086a633776), {\n        passive: true\n    });\n}\n\n\n\n(0, $feaffa6e705a09ab$export$5f9f2982725d71d5)();\n(0, $b9d74c03522a0ece$export$c7fc3d77edeab91a)();\n\n\n//# sourceMappingURL=index.a0347f0f.js.map\n","export const DOM = {\n  cells: document.querySelectorAll('.tile'),\n  newGameButton: document.querySelector('.button--restart'),\n  tryAgainButton: document.querySelector('.popup__button'),\n  scoreSpan: document.querySelector('.stats__score'),\n  bestSpan: document.querySelector('.stats__best'),\n  message: document.querySelector('.popup__text'),\n  messageBox: document.querySelector('.popup'),\n  themeToggleButton: document.querySelector('.button--theme'),\n  htmlElement: document.documentElement,\n  iconSun: document.querySelector('.icon--sun'),\n  iconMoon: document.querySelector('.icon--moon'),\n};\n","import { initEvents } from './ui/events.js';\nimport { startGame } from './core/gameManager.js';\n\nstartGame();\ninitEvents();\n","import { DOM } from './dom.js';\nimport { restartGame } from '../core/gameManager.js';\nimport { handleKeydown, handleTouchStart, handleTouchEnd } from './controls.js';\n\nexport function initEvents() {\n  DOM.newGameButton.addEventListener('click', restartGame);\n  DOM.tryAgainButton.addEventListener('click', restartGame);\n\n  window.addEventListener('keydown', handleKeydown);\n  window.addEventListener('touchstart', handleTouchStart, { passive: true });\n  window.addEventListener('touchend', handleTouchEnd, { passive: true });\n}\n","import Game from '../../modules/Game.class.js';\nimport { renderBoard, hideMessage } from '../ui/render.js';\n\nexport const game = new Game();\n\nexport function startGame() {\n  game.start();\n  renderBoard(game);\n}\n\nexport function restartGame() {\n  game.restart();\n  game.start();\n  hideMessage();\n  renderBoard(game);\n}\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = this.copyBoard(initialState);\n    this.board = this.copyBoard(initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.copyBoard(this.board);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.board = this.copyBoard(this.initialState);\n    this.score = 0;\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.board = this.copyBoard(this.initialState);\n    this.score = 0;\n  }\n\n  moveLeft() {\n    this.performMove((board) => this.merge(board));\n  }\n\n  moveRight() {\n    this.performMove((board) => this.reverse(this.merge(this.reverse(board))));\n  }\n\n  moveUp() {\n    this.performMove((board) => {\n      const transposed = this.transpose(board);\n      const merged = this.merge(transposed);\n\n      return this.transpose(merged);\n    });\n  }\n\n  moveDown() {\n    this.performMove((board) => {\n      const transposed = this.transpose(board);\n      const reversed = this.reverse(transposed);\n      const merged = this.merge(reversed);\n      const restored = this.reverse(merged);\n\n      return this.transpose(restored);\n    });\n  }\n\n  performMove(moveFn) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevBoard = this.copyBoard(this.board);\n\n    this.board = moveFn(this.board);\n\n    if (!this.areBoardsEqual(this.board, prevBoard)) {\n      this.addRandomTile();\n    }\n\n    if (this.has2048()) {\n      this.status = 'win';\n    } else if (this.isGameOver()) {\n      this.status = 'lose';\n    }\n  }\n\n  areBoardsEqual(b1, b2) {\n    return b1.every((row, r) => row.every((val, c) => val === b2[r][c]));\n  }\n\n  merge(board) {\n    return board.map((row) => {\n      const filtered = row.filter((n) => n !== 0);\n\n      for (let i = 0; i < filtered.length - 1; i++) {\n        if (filtered[i] === filtered[i + 1]) {\n          filtered[i] *= 2;\n          this.score += filtered[i];\n          filtered.splice(i + 1, 1);\n        }\n      }\n\n      while (filtered.length < 4) {\n        filtered.push(0);\n      }\n\n      return filtered;\n    });\n  }\n\n  transpose(board) {\n    return board[0].map((_, col) => board.map((row) => row[col]));\n  }\n\n  reverse(board) {\n    return board.map((row) => [...row].reverse());\n  }\n\n  copyBoard(board) {\n    return board.map((row) => [...row]);\n  }\n\n  addRandomTile() {\n    const empty = [];\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.board[r][c] === 0) {\n          empty.push({ r, c });\n        }\n      }\n    }\n\n    if (empty.length > 0) {\n      const { r, c } = empty[Math.floor(Math.random() * empty.length)];\n\n      this.board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  has2048() {\n    return this.board.flat().includes(2048);\n  }\n\n  isGameOver() {\n    if (this.board.flat().includes(0)) {\n      return false;\n    }\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        const curr = this.board[r][c];\n\n        if (\n          (r < 3 && curr === this.board[r + 1][c]) ||\n          (c < 3 && curr === this.board[r][c + 1])\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","import { DOM } from './dom.js';\n\nlet lastBoard = [];\n\nexport function renderBoard(game) {\n  const board = game.getState();\n  const flatBoard = board.flat();\n  const flatLast = lastBoard.flat();\n\n  DOM.cells.forEach((cell, index) => {\n    const val = flatBoard[index];\n    const prev = flatLast[index];\n\n    cell.className = 'field-cell';\n\n    if (val) {\n      const digits = String(val).length;\n\n      cell.style.setProperty('--digits', digits);\n      cell.textContent = val;\n      cell.classList.add(`field-cell--${val}`);\n\n      if (prev === 0 && val !== 0) {\n        cell.classList.add('field-cell--new');\n      } else if (prev && val > prev) {\n        cell.classList.add('field-cell--merged');\n      }\n    } else {\n      cell.textContent = '';\n      cell.style.setProperty('--digits', 1);\n    }\n  });\n\n  lastBoard = board.map((row) => [...row]);\n\n  DOM.scoreSpan.textContent = game.getScore();\n  updateBest(game.getScore());\n  checkGameStatus(game);\n}\n\nexport function checkGameStatus(game) {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    showMessage('🎉 Winner! Congrats!');\n  } else if (gameStatus === 'lose') {\n    showMessage('You lose! Restart the game?');\n  } else {\n    hideMessage();\n  }\n}\n\nexport function showMessage(text) {\n  DOM.message.textContent = text;\n  DOM.messageBox.classList.remove('hidden');\n}\n\nexport function hideMessage() {\n  DOM.messageBox.classList.add('hidden');\n}\n\nexport function updateBest(score = 0) {\n  const bestScore = Number(localStorage.getItem('best-score')) || 0;\n\n  if (score > bestScore) {\n    localStorage.setItem('best-score', score);\n    DOM.bestSpan.textContent = score;\n  } else {\n    DOM.bestSpan.textContent = bestScore;\n  }\n}\n","import { game, restartGame } from '../core/gameManager.js';\nimport { renderBoard } from './render.js';\n\nexport function handleKeydown(e) {\n  const actions = {\n    ArrowLeft: 'moveLeft',\n    a: 'moveLeft',\n    ArrowRight: 'moveRight',\n    d: 'moveRight',\n    ArrowUp: 'moveUp',\n    w: 'moveUp',\n    ArrowDown: 'moveDown',\n    s: 'moveDown',\n    n: 'restart',\n    r: 'restart',\n  };\n\n  const action = actions[e.key];\n\n  if (!action) {\n    return;\n  }\n\n  if (action === 'restart') {\n    restartGame();\n\n    return;\n  }\n\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  game[action]();\n  renderBoard(game);\n}\n\nlet touchStartX = 0;\nlet touchStartY = 0;\nconst SWIPE_THRESHOLD = 30;\n\nexport function handleTouchStart(e) {\n  const touch = e.touches[0];\n\n  touchStartX = touch.clientX;\n  touchStartY = touch.clientY;\n}\n\nexport function handleTouchEnd(e) {\n  const touch = e.changedTouches[0];\n  const deltaX = touch.clientX - touchStartX;\n  const deltaY = touch.clientY - touchStartY;\n\n  const absX = Math.abs(deltaX);\n  const absY = Math.abs(deltaY);\n\n  if (\n    Math.max(absX, absY) < SWIPE_THRESHOLD ||\n    game.getStatus() !== 'playing'\n  ) {\n    return;\n  }\n\n  if (absX > absY) {\n    if (deltaX > 0) {\n      game.moveRight();\n    } else {\n      game.moveLeft();\n    }\n  } else {\n    if (deltaY > 0) {\n      game.moveDown();\n    } else {\n      game.moveUp();\n    }\n  }\n\n  renderBoard(game);\n}\n"],"names":["a","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$89abce507c708760$export$cb0933279c36a66b","set","s","enumerable","configurable","cells","document","querySelectorAll","newGameButton","querySelector","tryAgainButton","scoreSpan","bestSpan","message","messageBox","themeToggleButton","htmlElement","documentElement","iconSun","iconMoon","$bOOQy","$a5fd07fa01589658$exports","constructor","initialState","copyBoard","board","score","status","getScore","getState","getStatus","start","addRandomTile","restart","moveLeft","performMove","merge","moveRight","reverse","moveUp","transposed","transpose","merged","moveDown","reversed","restored","moveFn","prevBoard","areBoardsEqual","has2048","isGameOver","b1","b2","every","row","r","val","c","map","filtered","filter","n","i","length","splice","push","_","col","empty","Math","floor","random","flat","includes","curr","$aec2a4f3d3b1962e$var$lastBoard","$aec2a4f3d3b1962e$export$ed9055c26739410b","game","flatBoard","flatLast","DOM","forEach","cell","index","prev","className","digits","String","style","setProperty","textContent","classList","add","$aec2a4f3d3b1962e$export$a0659029c09c6c24","bestScore","Number","localStorage","getItem","setItem","$aec2a4f3d3b1962e$export$7720291ca6f99335","gameStatus","$aec2a4f3d3b1962e$export$787f5d117f138d13","$aec2a4f3d3b1962e$export$4521d214801a3d3b","text","remove","$feaffa6e705a09ab$export$119d2a93e2780362","__esModule","default","$feaffa6e705a09ab$export$13063a66817085c1","$1dc5e44c5ffa5779$var$touchStartX","$1dc5e44c5ffa5779$var$touchStartY","addEventListener","e","action","actions","ArrowLeft","ArrowRight","d","ArrowUp","w","ArrowDown","key","touch","touches","clientX","clientY","passive","changedTouches","deltaX","deltaY","absX","abs","absY","max"],"version":3,"file":"index.a0347f0f.js.map"}